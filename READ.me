# QueryProcessor 5th Assignment

This is a Query Processor that search most relevant documents in a collection
It was constructed for 5rd Information Retrieval Assignment, from UFMG.

## Requirements

The [C++ Json Library](https://github.com/nlohmann/json) and [strtk library](https://github.com/ArashPartow/strtk) are included on utils folder, for manipulating the json collection and the strings.

## Usage

The query processor will start by reading a lot of pre wrote files : 
dictionary.txt - the dictionary with term_id startline,endline,idf
docslinks.txt - an file that has id_document url
docwij.txt - the docwij file. It was precomputed the value of each document wij, for doing the rank evaluation. id_document wij
invfile.txt - the invfile. it was modified so each line is a different term
termposition.txt - stores the term start on invfile. term_id position
vocabulary.txt - the vocabulary with term_id term

For changing the path for any of these files, you can do it on parser.h.

There are functions on code for generating each one of these pre computed files by collection and invfile itself


You can compile the finder by doing make:
```
make
```

Problems that may occur are the include and file paths, check if they are correct.

There must be a file named queries.txt where every line is a different query for searching.


If everything occours fine, you can run the program by executing:
```
./queryfinder
```

## Outputs
Will be printed:

Total number of queries
Average response time per query 
Total searching time

Besides these prints, one file will be saved:
"queriesresult.txt" - the file that includes each query searched, number of possible results for each and top 5 results (document links more relevants based on Vector Model)



Anything you can refer an email to: gabpaivapereira@gmail.com

Author: Gabriel Felipe Paiva Pereira
